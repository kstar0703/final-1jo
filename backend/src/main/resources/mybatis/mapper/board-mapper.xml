<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BoardMapper">
	<!-- 전체 게시글 목록 조회 (관리자) -->
	<select id="listByAdmin" resultType="BoardVo">
		SELECT
			C.CATEGORY_NO
			, CATEGORY_NAME
			, BOARD_NO
			, WRITER_NO
			, TITLE
			, CONTENT
			, ENROLL_DATE
			, MODIFY_DATE
			, B.DEL_YN
			, HIT
			, M.UNIT_NO
			, NAME
			, DONG
			, HO
		FROM CATEGORY C
		JOIN RESIDENT_BOARD B ON C.CATEGORY_NO =
		B.CATEGORY_NO
		JOIN MEMBER M ON B.WRITER_NO = M.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		ORDER BY ENROLL_DATE DESC
	</select>

	<!-- 전체 게시글 목록 조회 (사용자) -->
	<select id="list" resultType="BoardVo">
		SELECT
			C.CATEGORY_NO
			, CATEGORY_NAME
			, BOARD_NO
			, WRITER_NO
			, TITLE
			, CONTENT
			, ENROLL_DATE
			, MODIFY_DATE
			, B.DEL_YN
			, HIT
			, M.UNIT_NO
			, NAME
			, DONG
			, HO
		FROM CATEGORY C
		JOIN RESIDENT_BOARD B ON C.CATEGORY_NO = B.CATEGORY_NO
		JOIN MEMBER M ON B.WRITER_NO = M.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		WHERE B.DEL_YN = 'N'
		ORDER BY ENROLL_DATE DESC
	</select>

	<!-- 댓글수 조회 -->
	<select id="listReplyCount" resultType="BoardReplyVo">
		SELECT COUNT(REPLY_NO)
			FROM BOARD_REPLY
			WHERE BOARD_NO = #{boardNo}
	</select>
		
	<!-- 좋아요수 조회 -->
	<select id="listLikeCount" resultType="BoardLikeVo">
		SELECT COUNT(MEMBER_NO)
			FROM BOARD_LIKE
			WHERE BOARD_NO = #{boardNo}
	</select>

	<!-- 좋아요 클릭여부 조회 (글번호 +회원번호)-->
	<select id="selectLikeByMemeberNo" resultType="BoardLikeVo">
		SELECT COUNT(MEMBER_NO)
			FROM BOARD_LIKE
			WHERE BOARD_NO = #{boardNo}
			AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="insertLike">
		INSERT INTO BOARD_LIKE(
		    MEMBER_NO
		    , BOARD_NO
		) VALUES (
		    #{memberNo}
		    , #{boardNo}
		)
	</insert>
	
	<!-- 좋아요 삭제 -->
	<delete id="deleteLike">
		DELETE FROM BOARD_LIKE
			WHERE BOARD_NO = #{boardNo}
			AND MEMBER_NO = #{memberNo}
	</delete>
	
	<!-- 게시글 상세 조회 (관리자) -->
	<select id="detailByAdmin" resultType="BoardVo">
		SELECT 
		    C.CATEGORY_NO
		    , CATEGORY_NAME
		    , B.BOARD_NO
		    , WRITER_NO
		    , TITLE
		    , CONTENT
		    , ENROLL_DATE
		    , MODIFY_DATE
		    , B.DEL_YN
		    , HIT
		    , M.UNIT_NO
		    , NAME
		    , DONG
		    , HO
		    , IMG_NO
		    , IMG_NAME
		    , PATH
		    , ORIGIN_NAME
		FROM CATEGORY C
		JOIN RESIDENT_BOARD B ON C.CATEGORY_NO = B.CATEGORY_NO
		JOIN MEMBER M ON B.WRITER_NO = M.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		JOIN RESIDENT_BOARD_IMG I ON I.BOARD_NO = B.BOARD_NO
		WHERE B.BOARD_NO = #{boardNo}
	</select>
	
	<!-- 게시글 상세 조회 (사용자) -->
	<select id="detail" resultType="BoardVo">
		SELECT 
		    C.CATEGORY_NO
		    , CATEGORY_NAME
		    , BOARD_NO
		    , WRITER_NO
		    , TITLE
		    , CONTENT
		    , ENROLL_DATE
		    , MODIFY_DATE
		    , DEL_YN
		    , HIT
		    , M.UNIT_NO
		    , NAME
		    , DONG
		    , HO    
		    , IMG_NO
		    , IMG_NAME
		    , PATH
		    , ORIGIN_NAME
		FROM CATEGORY C
		JOIN RESIDENT_BOARD B ON C.CATEGORY_NO = B.CATEGORY_NO
		JOIN MEMBER M ON B.WRITER_NO = M.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		JOIN RESIDENT_BOARD_IMG I ON I.BOARD_NO = B.BOARD_NO
		WHERE BOARD_NO = #{boardNo}
		AND B.DEL_YN = 'N'
	</select>

	<!-- 카테고리 조회 -->
	<select id="listCategory" resultType="CategoryVo">
		SELECT 
			    CATEGORY_NO
			    , CATEGORY_NAME
			FROM CATEGORY
			ORDER BY CATEGORY_NO
		</select>
	
	<!-- 카테고리 추가 -->
	<insert id="insertCategory">
		INSERT INTO CATEGORY(
			    CATEGORY_NO
			    , CATEGORY_NAME
			) VALUES (
			    SEQ_CATEGORY_NO.NEXTVAL
			    , #{categoryName}
	</insert>
	
	<!-- 게시글 작성 -->
	<insert id="insert">
		INSERT INTO RESIDENT_BOARD(
			    BOARD_NO
			    , WRITER_NO
			    , CATEGORY_NO
			    , TITLE
			    , CONTENT
			) VALUES (
			    SEQ_RESIDENT_BOARD_NO.NEXTVAL
			    , #{writerNo}
			    , #{categoryNo}
			    , #{title}
			    , #{content}
			)
	</insert>
	
	<!-- 이미지 디비화 -->
	<insert id="insertImg">
		INSERT INTO RESIDENT_BOARD_IMG(
			    IMG_NO
			    , BOARD_NO
			    , IMG_NAME
			    , PATH
			    , ORIGIN_NAME
			) VALUES (
			    SEQ_RESIDENT_BOARD_IMG_NO.NEXTVAL
			    , #{boardNo}
			    , #{imgName}
			    , #{path}
			    , #{originName}
			)
	</insert>

	<!-- 게시글 수정 -->
	<update id="edit">
		UPDATE RESIDENT_BOARD
			<set>
				<if test="categoryNo != null and categoryNo != ''">
				    CATEGORY_NO = #{categoryNo}
				</if>
				<if test="title != null and title != ''">
			    	TITLE = #{title}
				</if>
				<if test="content != null and content != ''">
			    	CONTENT = #{content}
				</if>
			    MODIFY_DATE = SYSDATE				
			</set>
			WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="delete">
		UPDATE RESIDENT_BOARD
			SET
			    DEL_YN = 'Y'
			    , MODIFY_DATE = SYSDATE
			WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 검색 (관리자 / 카테고리번호, 작성자, 제목, 내용) -->
	<select id="search" resultType="BoardVo">
		SELECT 
		    C.CATEGORY_NO
		    , CATEGORY_NAME
		    , BOARD_NO
		    , WRITER_NO
		    , TITLE
		    , CONTENT
		    , ENROLL_DATE
		    , MODIFY_DATE
		    , DEL_YN
		    , HIT
		    , M.UNIT_NO
		    , NAME
		    , DONG
		    , HO    
		FROM CATEGORY C
		JOIN RESIDENT_BOARD B ON C.CATEGORY_NO = B.CATEGORY_NO
		JOIN MEMBER M ON B.WRITER_NO = M.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		<where>
			<!-- TODO name으로 받는게 편한지 체크  -->
			<if test="searchType == categoryNo and searchKeyword != null and searchKeyword != '' ">
				AND CATEGORY_NO LIKE #{searchKeyword}
			</if>
			<!-- TODO writer로 받는 거 체크  -->
			<if test="searchType == writer and searchKeyword != null and searchKeyword != '' ">
				AND (NAME LIKE '%' || #{searchKeyword} || '%' OR DONG LIKE '%' || #{searchKeyword} || '%')
			</if>
			<if test="searchType == title and searchKeyword != null and searchKeyword != '' ">
				AND TITLE LIKE '%' || #{searchKeyword} || '%' 
			</if>
			<if test="searchType == content and searchKeyword != null and searchKeyword != '' ">
				AND CONTENT LIKE '%' || #{searchKeyword} || '%' 
			</if>
		</where>
		ORDER BY ENROLL_DATE DESC
	</select>

	<!-- 댓글 조회 -->
	<select id="listReply" resultType="BoardReplyVo">
	    SELECT
		    REPLY_NO
		    , R.MEMBER_NO
		    , CONTENT
		    , ENROLL_DATE
		    , MODIFY_DATE
		    , DEY_YN
		    , M.UNIT_NO
		    , NAME
		    , DONG
		    , HO    
		FROM BOARD_REPLY R
		JOIN MEMBER M ON M.MEMBER_NO = R.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		WHERE DEY_YN = 'N'
		AND BOARD_NO = #{boardNo}
		ORDER BY ENROLL_DATE ASC
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="insertReply">
		INSERT INTO BOARD_REPLY(
		    REPLY_NO
		    , MEMBER_NO
		    , BOARD_NO
		    , CONTENT
		)
		VALUES (
		    SEQ_BOARD_REPLY_NO.NEXTVAL
		    , #{memberNo}
		    , #{boardNo}
		    , #{content}
		)
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="editReply">
		UPDATE BOARD_REPLY
			SET
			    CONTENT = #{content}
			    , MODIFY_DATE = SYSDATE
			WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- 댓글 삭제 -->
	<update id="deleteReply">
		UPDATE BOARD_REPLY
			SET
			    MODIFY_DATE = SYSDATE
			    , DEY_YN = 'Y'
			WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- 댓글 검색 (작성자, 내용으로 검색) -->
	<select id="searchReply" resultType="BoardReplyVo">
		SELECT 
		    MEMBER_NO
		    , CONTENT
		    , M.UNIT_NO
		    , NAME
		    , DONG
		    , HO 
		FROM BOARD_REPLY R
		JOIN MEMBER M ON M.MEMBER_NO = R.MEMBER_NO
		JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
		<where>
			<if test="searchType == writer and searchKeyword != null and searchKeyword != '' ">
				AND (NAME LIKE '%' || #{searchKeyword} || '%' OR DONG LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchType == content and searchKeyword != null and searchKeyword != '' ">
				AND CONTENT LIKE '%' || #{searchKeyword} || '%' 
			</if>
		</where>
			AND DEY_YN = 'N'
		ORDER BY ENROLL_DATE ASC
	</select>
	


</mapper>