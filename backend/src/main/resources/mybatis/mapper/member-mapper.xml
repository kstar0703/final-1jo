<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">
	
	<!-- 회원 중복 체크  -->
	<select id="validateId" resultType="int">
		SELECT COUNT(*)
    	FROM MEMBER 
    	WHERE PHONE = #{phone}
	</select>
	
	<!-- 회원가입 emial 추가 -->
	<insert id="join">
		INSERT INTO MEMBER 
		(
		MEMBER_NO
		,UNIT_NO
		,PHONE
		,PWD
		,NAME
		,GENDER
		,BIRTH
		,OWNER_YN
		,EMAIL
		) 
		VALUES 
		(
		SEQ_MEMBER_NO.NEXTVAL
		,#{unitNo}
		,#{phone}
		,#{pwd}
		,#{name}
		,#{gender}
		,#{birth}
		,#{ownerYn}
		,#{email}
		)
		
	</insert>
	
	<!-- 로그인  -->
	<select id="login" resultType="MemberVo">
	SELECT
    (SELECT COUNT(*) FROM MEMBER 
 	WHERE UNIT_NO =(SELECT UNIT_NO FROM MEMBER 
  	WHERE PHONE = #{phone} AND PWD =#{pwd} AND DEL_YN ='N')
  	) AS UNITCOUNT 
	,MEMBER_NO
	,U.UNIT_NO
	,PHONE,PWD
	,OWNER_YN
	,NAME
	,GENDER
	,BIRTH
	,DEL_YN
	,PERMISSION_YN
    ,DONG
    ,HO
    ,SCALE
    ,VEH_TIME
    ,EMAIL
    ,JOIN_DATE
    FROM MEMBER M
    JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
    WHERE
    PHONE = #{phone} 
    AND 
    PWD = #{pwd}
    AND 
    DEL_YN ='N'
	</select>
	
	
	<!-- 정보 수정  -->
	<update id ="changeInfo">
	UPDATE 
	MEMBER 
	<trim prefix="SET" suffixOverrides=",">
 	<if test="pwd !=null">PWD = #{pwd}, </if>
 	<if test="name !=null">NAME = #{name}, </if>
 	<if test="gender !=null">GENDER = #{gender} </if>
 	
	</trim>
	WHERE MEMBER_NO = #{memberNo} AND DEL_YN ='N' 
	
	</update>
	
	<!-- 패스워드 수정  -->
	<update id ="changePwd">
	UPDATE 
	MEMBER 
	<trim prefix="SET" suffixOverrides=",">
 	<if test="pwd !=null">PWD = #{pwd}, </if>
	</trim>
	WHERE MEMBER_NO = #{memberNo} AND DEL_YN ='N' 
	</update>
	<!-- 회원탈퇴  -->
	<update id="delete">
	UPDATE MEMBER 
	SET 
	DEL_YN = 'Y' 
	,PHONE =#{phone}
	WHERE 
	MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원검색 -->
	<select id="findMember" resultType="MemberVo">
	SELECT
	MEMBER_NO
	,U.UNIT_NO
	,PHONE
	,PWD
	,OWNER_YN
	,NAME
	,GENDER
	,BIRTH
	,DEL_YN
	,PERMISSION_YN
    ,DONG
    ,HO
    ,SCALE
    ,VEH_TIME
    ,EMAIL
    ,JOIN_DATE
    FROM MEMBER M
    JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO   
	WHERE DEL_YN ='N' 
	
	 <if test="permissionYn != null and permissionYn != 'all' and permissionYn.length()!=0  ">
		 AND PERMISSION_YN= #{permissionYn} 
	 </if>
	 
	 <if test="ownerYn !=null  and ownerYn != 'all' and ownerYn.length()!=0 " >
	 	AND OWNER_YN = #{ownerYn}
	 </if>
	 
	<if test="name != null and name.length() > 0">
    AND NAME LIKE '%' || #{name} || '%' 
	</if>
	 
	 <if test="phone != null and phone.length() > 0">
    AND PHONE LIKE '%' || #{phone} || '%'
	</if>
	 <if test="dong != null and dong.length() > 0">
    AND U.DONG = #{dong}
	</if>
	 
	<if test="ho != null and ho.length() > 0">
    AND U.HO = #{ho}
	</if>
	 
		  
	
	ORDER BY MEMBER_NO DESC

	</select>
	
	<!-- 회원검색 -->
	<select id="count" resultType="int">
	SELECT
	
	COUNT(*)
	
    FROM MEMBER M
    JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO   
	WHERE DEL_YN ='N' 
	
	 <if test="permissionYn != null and permissionYn != 'all' and permissionYn.length()!=0  ">
		 AND PERMISSION_YN= #{permissionYn} 
	 </if>
	 
	 <if test="ownerYn !=null  and ownerYn != 'all' and ownerYn.length()!=0 " >
	 	AND OWNER_YN = #{ownerYn}
	 </if>
	 
	<if test="name != null and name.length() > 0">
    AND NAME LIKE '%' || #{name} || '%' 
	</if>
	 
	 <if test="phone != null and phone.length() > 0">
    AND PHONE LIKE '%' || #{phone} || '%'
	</if>
	 <if test="dong != null and dong.length() > 0">
    AND U.DONG = #{dong}
	</if>
	 
	<if test="ho != null and ho.length() > 0">
    AND U.HO = #{ho}
	</if>
	 
		  	
	ORDER BY MEMBER_NO DESC

	</select>
	
	<!-- 회원 수락 -->
	<update id="acceptMember">
	UPDATE MEMBER SET PERMISSION_YN = 'Y'
	WHERE MEMBER_NO =#{memberNo}
	</update>
	
	<update id="cancelacceptMember">
	UPDATE MEMBER SET PERMISSION_YN = 'N'
	WHERE MEMBER_NO =#{memberNo}
	</update>
	
	
	<!-- 유닛정보  -->
	<select id="selectUnit" resultType="com.team1.app.unit.vo.UnitVo">
	SELECT
	UNIT_NO
	,DONG
	,HO
	,SCALE
	,VEH_TIME
	from unit
	
	<trim prefix="WHERE" suffixOverrides="AND">
 	<if test="dong !=null">DONG= #{dong} AND </if>
 	<if test="ho !=null">HO = #{ho} </if>
 	</trim>
	</select>
	
	
	<!-- 유닛정보 -->
	<select id="unitInfo" resultType="com.team1.app.unit.vo.UnitVo">
	SELECT 
	UNIT_NO
	,DONG
	,HO
	,SCALE
	,VEH_TIME
	FROM UNIT
	WHERE UNIT_NO  = #{unitNo}
	</select>
	
	
	
	<!-- 정보 최신화  -->
	<select id="localStoargeMember" resultType="MemberVo">
		SELECT
   (SELECT COUNT(*) FROM MEMBER 
 	WHERE UNIT_NO =(SELECT UNIT_NO FROM MEMBER 
  	WHERE PHONE = #{phone} AND DEL_YN ='N')
  	) AS UNITCOUNT
	,MEMBER_NO
	,U.UNIT_NO
	,PHONE,PWD
	,OWNER_YN
	,NAME
	,GENDER
	,BIRTH
	,DEL_YN
	,PERMISSION_YN
    ,DONG
    ,HO
    ,SCALE
    ,VEH_TIME
    ,EMAIL
    ,JOIN_DATE
    FROM MEMBER M
    JOIN UNIT U ON M.UNIT_NO = U.UNIT_NO
    WHERE
    PHONE = #{phone}
    AND 
    DEL_YN ='N'
	</select>
	
	
	<select id='emailCheck' resultType='int' >
	select count(*) from member
	where email = #{email}
	</select>
	
	<select id="countUnit" resultType='MemberVo' >
	SELECT 
    U.UNIT_NO,
    NVL(M.NAME, '세대주 정보 미등록') AS NAME,
    U.DONG,    
    U.HO
	
	FROM 
    UNIT U
	LEFT JOIN 
    MEMBER M ON U.UNIT_NO = M.UNIT_NO AND M.OWNER_YN = 'Y'
    
    <trim prefix="where" suffixOverrides="and"> 
    
    <if test="name != null and name.length()>0" >
        NAME = #{name} and
    </if> 
   
     <if test="dong != null and dong.length()>0" >
     DONG =#{dong} and    
    </if>
    
    <if test="ho != null and ho.length()>0" >
    HO = #{ho}
    </if>
    </trim>
     ORDER BY U.UNIT_NO DESC    
	</select>
	
	
	
	

</mapper>
